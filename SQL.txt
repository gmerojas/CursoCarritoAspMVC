create database DBCARRITO
GO

USE DBCARRITO
GO

CREATE TABLE CATEGORIA(
IdCategoria int primary key identity,
Descripcion varchar(100),
Activo bit default 1,
FechaRegistro datetime default getdate()
)

go

create table MARCA(
IdMarca int primary key identity,
Descripcion varchar(100),
Activo bit default 1,
FechaRegistro datetime default getdate()
)

go


create table PRODUCTO(
IdProducto int primary key identity,
Nombre varchar(500),
Descripcion varchar(500),
IdMarca int references Marca(IdMarca),
IdCategoria int references Categoria(IdCategoria),
Precio decimal(10,2) default 0,
Stock int,
RutaImagen varchar(100),
NombreImagen varchar(100),
Activo bit default 1,
FechaRegistro datetime default getdate()
)

go

create table Cliente(
IdCliente int primary key identity,
Nombre varchar(100),
Apellidos varchar(100),
Correo varchar(100),
Clave varchar(150),
Reestablecer bit default 0,
FechaRegistro datetime default getdate()
)

go

create table Carrito(
IdCarrito int primary key identity,
IdCliente int references Cliente(IdCliente),
IdProducto int references Producto(IdProducto),
Cantidad int
)

go

create table Venta(
IdVenta int primary key identity,
IdCliente int references Cliente(IdCliente),
TotalProducto int,
MontoTotal decimal(10,2),
Cantacto varchar(50),
IdDistrito varchar(10),
Telefono varchar(50),
Direccion varchar(500),
IdTransaccion varchar(50),
FechaVenta datetime default getdate()
)

go

create table Detalle_Venta(
IdDetalleVenta int primary key identity,
IdVenta int references Venta(IdVenta),
IdProducto int references Producto(IdProducto),
Cantidad int,
Total decimal(10,2)
)

go

create table Usuario(
IdUsuario int primary key identity,
Nombres varchar(100),
Apellidos varchar(100),
Correo varchar(100),
Clave varchar(150),
Reestablecer bit default 1,
Activo bit default 1,
FechaRegistro datetime default getdate()
)

go

create table Departamento(
IdDepartamento varchar(2),
Descripcion varchar(45)
)

go

create table Provincia(
IdProvincia varchar(4),
Descripcion varchar(45),
IdDepartamento varchar(2)
)

go

create table Distrito(
IdDistrito varchar(6),
Descripcion varchar(45),
IdProvincia varchar(4),
IdDepartamento varchar(2)
)

go




insert into Usuario(Nombres,Apellidos,Correo,Clave) values('test nombre','test apellido','test@example.com','ecd71870d1963316a97e3ac3408c9835ad8cf0f3c1bc703527c30265534f75ae');

select * from Usuario;

insert into CATEGORIA(Descripcion) values
('Tecnologia'),
('Muebles'),
('Dormitorio'),
('Deportes');

select * from CATEGORIA;

select * from MARCA;

insert into MARCA(Descripcion) values
('SONYTE'),
('HPTE'),
('LGTE'),
('HYUNDAITE'),
('CANONTE'),
('ROBERTA ALLENTE');


select * from Departamento;

insert into Departamento(IdDepartamento,Descripcion) values
('01','Arequipa'),
('02','Ica'),
('03','Lima');


select * from Provincia;

insert into Provincia(IdProvincia,Descripcion,IdDepartamento) values
--AREQUIPA - PROVINCIAS
('0101','Arequipa','01'),
('0102','Canamá','01'),

--AREQUIPA - PROVINCIAS
('0201','Ica','02'),
('0202','Chincha','02'),

--AREQUIPA - PROVINCIAS
('0301','Lima','03'),
('0302','Barranca','03');


select * from Distrito;

insert into Distrito(IdDistrito,Descripcion,IdProvincia,IdDepartamento) values
('010101','Nieva','0101','01'),
('010102','El cenepa','0101','01'),

('010201','Canamá','0102','01'),
('010202','Jose Maria Quimper','0102','01'),

--ICA - DISTRITO
('020101','Ica','0201','02'),
('020102','La Tinguiña','0201','02'),
('020201','Chincha Alta','0202','02'),
('020202','Alto Laran','0202','02'),

--LIMA - DISTRITO
('030101','Lima','0301','03'),
('030102','Ancón','0301','03'),
('030201','Barranca','0302','03'),
('030202','Paramonga','0302','03');



create proc sp_RegistrarUsuario(
@Nombres varchar(100),
@Apellidos varchar(100),
@Correo varchar(100),
@Clave varchar(100),
@Activo bit,
@Mensaje varchar(500) output,
@Resultado int output
)
as
begin
	set @Resultado = 0

	if not exists (select * from Usuario where Correo = @Correo)
		begin
			insert into Usuario(Nombres,Apellidos,Correo,Clave,Activo) values
			(@Nombres,@Apellidos,@Correo,@Clave,@Activo)

			set @Resultado = SCOPE_IDENTITY()
		end
	else
		set @Mensaje = 'El correo del usuario ya existe'
end;


create proc sp_EditarUsuario (
@IdUsuario int,
@Nombres varchar(100),
@Apellidos varchar(100),
@Correo varchar(100),
@Activo bit,
@Mensaje varchar(500) output,
@Resultado int output
)
as
begin
	set @Resultado = 0

	if not exists (select * from Usuario where Correo = @Correo and IdUsuario != @IdUsuario)
		begin
			update top (1) Usuario set
			Nombres = @Nombres,
			Apellidos = @Apellidos,
			Correo = @Correo,
			Activo = @Activo
			where IdUsuario = @IdUsuario

			set @Resultado = 1
		end
	else
		set @Mensaje = 'El correo del usuario ya existe'
end;



create proc sp_RegistrarCategoria(
@Descripcion varchar(100),
@Activo bit,
@Mensaje varchar(500) output,
@Resultado int output
)
as
begin
	set @Resultado = 0

	if not exists (select * from CATEGORIA where Descripcion = @Descripcion)
		begin
			insert into Categoria(Descripcion,Activo) values
			(@Descripcion,@Activo)

			set @Resultado = SCOPE_IDENTITY()
		end
	else
		set @Mensaje = 'La categoría ya existe'
end;


create proc sp_EditarCategoria (
@IdCategoria int,
@Descripcion varchar(100),
@Activo bit,
@Mensaje varchar(500) output,
@Resultado int output
)
as
begin
	set @Resultado = 0

	if not exists (select * from CATEGORIA where Descripcion = @Descripcion and IdCategoria != @IdCategoria)
		begin
			update top (1) CATEGORIA set
			Descripcion = @Descripcion,
			Activo = @Activo
			where IdCategoria = @IdCategoria

			set @Resultado = 1
		end
	else
		set @Mensaje = 'La categoría ya existe'
end;


create proc sp_EliminarCategoria (
@IdCategoria int,
@Mensaje varchar(500) output,
@Resultado int output
)
as
begin
	set @Resultado = 0

	if not exists (select * from PRODUCTO p inner join  CATEGORIA c on c.IdCategoria = p.IdCategoria 
	where p.IdCategoria = @IdCategoria)
		begin
			delete top(1) from CATEGORIA
			where IdCategoria = @IdCategoria

			set @Resultado = 1
		end
	else
		set @Mensaje = 'La categoría se encuentra relacionada a un producto'
end;

create proc sp_RegistrarMarca(
@Descripcion varchar(100),
@Activo bit,
@Mensaje varchar(500) output,
@Resultado int output
)
as
begin
	set @Resultado = 0

	if not exists (select * from MARCA where Descripcion = @Descripcion)
		begin
			insert into Categoria(Descripcion,Activo) values
			(@Descripcion,@Activo)

			set @Resultado = SCOPE_IDENTITY()
		end
	else
		set @Mensaje = 'La marca ya existe'
end;


create proc sp_EditarMarca(
@IdMarca int,
@Descripcion varchar(100),
@Activo bit,
@Mensaje varchar(500) output,
@Resultado int output
)
as
begin
	set @Resultado = 0

	if not exists (select * from MARCA where Descripcion = @Descripcion and IdMarca != @IdMarca)
		begin
			update top (1) MARCA set
			Descripcion = @Descripcion,
			Activo = @Activo
			where IdMarca = @IdMarca

			set @Resultado = 1
		end
	else
		set @Mensaje = 'La marca ya existe'
end;


create proc sp_EliminarMarca (
@IdMarca int,
@Mensaje varchar(500) output,
@Resultado int output
)
as
begin
	set @Resultado = 0

	if not exists (select * from PRODUCTO p inner join  MARCA m on m.IdMarca = p.IdMarca 
	where p.IdMarca = @IdMarca)
		begin
			delete top(1) from MARCA
			where IdMarca = @IdMarca

			set @Resultado = 1
		end
	else
		set @Mensaje = 'La marca se encuentra relacionada a un producto'
end;



/*********************************************************************************************************************/
/*                                   PRODUCTO                                                      */
/*********************************************************************************************************************/
create proc sp_RegistrarProducto(
@Nombre varchar(100),
@Descripcion varchar(100),
@IdMarca varchar(100),
@IdCategoria varchar(100),
@Precio decimal(10,2),
@Stock int,
@Activo bit,
@Mensaje varchar(500) output,
@Resultado int output
)
as
begin
	set @Resultado = 0

	if not exists (select * from PRODUCTO where Nombre = @Nombre)
		begin
			insert into PRODUCTO(Nombre,Descripcion,IdMarca,IdCategoria,Precio,Stock,Activo) values
			(@Nombre,@Descripcion,@IdMarca,@IdCategoria,@Precio,@Stock,@Activo)

			set @Resultado = SCOPE_IDENTITY()
		end
	else
		set @Mensaje = 'El producto ya existe'
end;


create proc sp_EditarProducto(
@IdProducto int,
@Nombre varchar(100),
@Descripcion varchar(100),
@IdMarca varchar(100),
@IdCategoria varchar(100),
@Precio decimal(10,2),
@Stock int,
@Activo bit,
@Mensaje varchar(500) output,
@Resultado int output
)
as
begin
	set @Resultado = 0

	if not exists (select * from PRODUCTO where Nombre = @Nombre and IdProducto != @IdProducto)
		begin
			update top (1) PRODUCTO set
			Nombre = @Nombre,
			Descripcion = @Descripcion,
			IdMarca = @IdMarca,
			IdCategoria = @IdCategoria,
			Precio = @Precio,
			Stock = @Stock,
			Activo = @Activo
			where @IdProducto = @IdProducto

			set @Resultado = 1
		end
	else
		set @Mensaje = 'El producto ya existe'
end;


create proc sp_EliminarProducto(
@IdProducto int,
@Mensaje varchar(500) output,
@Resultado int output
)
as
begin
	set @Resultado = 0

	if not exists (select * from Detalle_Venta dv inner join PRODUCTO p on p.IdProducto = dv.IdProducto 
	where p.IdProducto = @IdProducto)
		begin
			delete top(1) from PRODUCTO
			where IdProducto = @IdProducto

			set @Resultado = 1
		end
	else
		set @Mensaje = 'El producto se encuentra relacionada a una venta'
end;
